/*
 * Copyright (c) 2014-2017 Afero, Inc. All rights reserved.
 */

apply plugin: 'com.android.library'

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url 'http://artifactory.dev.afero.io/artifactory/kiban'
        credentials {
            username = "gradle"
            password = "gradle"
        }
    }
}

android {
    publishNonDefault true
    compileSdkVersion 25
    buildToolsVersion "26"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25

        ext.buildNumber = System.getenv("BUILD_NUMBER") ?: "dev"
        versionCode System.getenv("BUILD_NUMBER") as Integer ?: 0
        versionName '1.0.' + ext.buildNumber
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(path: ':afero-sdk-core')

    compile 'io.kiban:hubby:1.0.476-prod@aar'

    compile 'com.android.support:support-annotations:25.3.1'

    // https://github.com/robolectric/robolectric
    testCompile 'org.robolectric:robolectric:3.3.1'
    testCompile 'junit:junit:4.12'
}

publishing {
    publications {
        aar(MavenPublication) {
            version = project.sdkVersion
            artifactId project.getName()
            groupId project.sdkGroupId

            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("_releaseCompile").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}