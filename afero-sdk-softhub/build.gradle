/*
 * Copyright (c) 2014-2017 Afero, Inc. All rights reserved.
 */

apply plugin: 'com.android.library'

repositories {
    maven {
        url "https://afero.jfrog.io/afero/hubby-android"
        credentials {
            username = project.aferoArtifactoryUserName
            password = project.aferoArtifactoryPassword
        }
    }
}

android {
    publishNonDefault true
    compileSdkVersion 25
    buildToolsVersion "26"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25

        versionCode 1
        versionName rootProject.version
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile project(path: ':afero-sdk-core')

    compile 'io.afero.sdk:hubby:1.0.495@aar'

    compile 'com.android.support:support-annotations:25.3.1'

    // https://github.com/robolectric/robolectric
    testCompile 'org.robolectric:robolectric:3.3.1'
    testCompile 'junit:junit:4.12'
}

publishing {
    publications {
        aar(MavenPublication) {
            version = rootProject.version
            artifactId project.getName()
            groupId rootProject.group

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("_releaseCompile").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    // don't include local dependencies
                    if (it.moduleVersion != 'unspecified') {
                        def dependency = dependencies.appendNode('dependency')
                        dependency.appendNode('groupId', it.moduleGroup)
                        dependency.appendNode('artifactId', it.moduleName)
                        dependency.appendNode('version', it.moduleVersion)
                    }
                }
            }
        }
    }

}

