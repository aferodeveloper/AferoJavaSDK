/*
 * Copyright (c) 2014-2017 Afero, Inc. All rights reserved.
 */

apply plugin: 'java'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // https://github.com/FasterXML/jackson
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.5'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.5'

    // https://github.com/ReactiveX/RxJava
    compile 'io.reactivex:rxjava:1.3.0'

    testCompile 'junit:junit:4.12'
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

// Copy resources into build/classes so unit tests can find them. Must be a better way?
task copyResourcesDirectoryToClasses(type: Copy){
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test/resources"
}

testClasses.dependsOn copyResourcesDirectoryToClasses

publishing {
    publications {
        jar(MavenPublication) {
            version = rootProject.version
            artifactId project.getName()
            groupId rootProject.group

            // Tell maven to prepare the generated "*.jar" file for publishing
            artifact("$buildDir/libs/${project.getName()}.jar")

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("compile").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}

